plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.2'
	id 'io.spring.dependency-management' version '1.1.4'
	id "jacoco"
  id "org.sonarqube" version "4.4.1.3373"
}

group = 'org.bedu'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.xerial:sqlite-jdbc:3.44.1.0'
	implementation 'org.hibernate.orm:hibernate-community-dialects:6.4.0.Final'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'com.h2database:h2:2.2.224'
}

tasks.named('test') {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.9
            }
        }
		}
}

test {
	jacoco {
		excludes = [
			"org.bedu.dto.*",
			"org.bedu.model.*",
			"org.bedu.mapper.*",
			"org.bedu.Application.class"
		]
	}
}

jacocoTestReport {
    reports {
        xml.required = true
    }

		afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it,
                exclude: [
                          'org/bedu/dto/**',
													'org/bedu/model/**',
													'org/bedu/mapper/**',
													'org/bedu/Application.class'
                          ]
            )
        }))
    }
}

tasks.named('sonar') {
	dependsOn test
}